@use "@angular/material" as mat;

@include mat.core();

// Color Palette Generator: http://mcg.mbitson.com/#!?mcgpalette0=%233f51b5
$my-palette: (
  50: #ebecf0,
  100: #cdcfda,
  200: #abafc1,
  300: #898ea8,
  400: #707695,
  500: #575e82,
  600: #4f567a,
  700: #464c6f,
  800: #3c4265,
  900: #2c3152,
  A100: #9daaff,
  A200: #6a7eff,
  A400: #3752ff,
  A700: #1e3cff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #ffffff,
    A700: #ffffff,
  ),
);

$my-primary: mat.define-palette($my-palette, A700);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

$my-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-primary,
      accent: $my-accent,
    ),
  )
);

// Emit theme-dependent styles for common features used across multiple components.
// @include mat.core-theme($my-theme);
@include mat.all-component-themes($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
// @include mat.button-theme($my-theme);

// Include the theme mixins for other components you use here.
